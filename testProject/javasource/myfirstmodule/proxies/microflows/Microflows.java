// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MyFirstModule module
	public static void act_Transfer_Target_Change(IContext context, myfirstmodule.proxies.TransferContext _transferContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TransferContext", _transferContext == null ? null : _transferContext.getMendixObject());
		Core.microflowCall("MyFirstModule.Act_Transfer_Target_Change").withParams(params).execute(context);
	}
	public static void aMap_Change(IContext context, myfirstmodule.proxies.AMap _aMap)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AMap", _aMap == null ? null : _aMap.getMendixObject());
		Core.microflowCall("MyFirstModule.AMap_Change").withParams(params).execute(context);
	}
	public static myfirstmodule.proxies.TransferContext dS_Transfer(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.DS_Transfer").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies.TransferContext.initialize(context, result);
	}
}