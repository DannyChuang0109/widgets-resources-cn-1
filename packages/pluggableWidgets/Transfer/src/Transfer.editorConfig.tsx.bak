import {
    Properties,
    Problem,
    StructurePreviewProps,
    RowLayoutProps,
    TextProps
} from "@mendix/piw-utils-internal";
import { TransferPreviewProps } from "../typings/TransferProps";


export function getProperties(values: TransferPreviewProps, defaultProperties: Properties): Properties {
    console.log(values);

    /*     values.attributesList.forEach((item: Transp, index: number) => {
            if (item.valueSourceType === "text") {
                hidePropertyIn(defaultProperties, values, "attributesList", index, "valueExpression");
            }
            if (item.valueSourceType === "expression") {
                hidePropertyIn(defaultProperties, values, "attributesList", index, "valueText");
            }
        }); */
    return defaultProperties;
}

export function check(values: TransferPreviewProps): Problem[] {
    console.log(values);

    const errors: Problem[] = [];
    /* values.attributesList.forEach((item: AttributesListPreviewType, index) => {
        if (PROHIBITED_ATTRIBUTES.some(value => value === item.attribute)) {
            errors.push({
                property: `attributesList/${index + 1}/attribute`,
                message: `Widget tries to change ${item.attribute} attribute, this is prohibited`,
                url: "https://docs.mendix.com/appstore/widgets/accessibility-helper"
            });
        }
    }); */

    return errors;
}

export function getPreview(values: TransferPreviewProps): StructurePreviewProps | null {
    return {
        type: "Container",
        borders: true,
        borderWidth: 1,
        children: [
            {
                type: "RowLayout",
                backgroundColor: "#F8F8F8",
            } as RowLayoutProps,
            {
                type: "RowLayout",
                columnSize: "grow",
                children: [
                    {
                        type: "Container",
                        grow: 1,
                        children: []
                    },
                    {
                        type: "Container",
                        grow: 0,
                        padding: 8,
                        children: [
                            {
                                type: "Text",
                                bold: true,
                                content:
                                    values.rightTitle
                            } as TextProps
                        ]
                    }
                ]
            }
        ]
    };
}
